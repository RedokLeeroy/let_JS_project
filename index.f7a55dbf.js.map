{"mappings":"sOAAe,SAAAA,IACb,MAAMC,EAAgBC,SAASC,cAAc,iCACvCC,EAAgBF,SAASC,cAAc,eACvCE,EAAgBH,SAASC,cAAc,aAE7CF,EAAcK,iBAAiB,SAASC,IACtCH,EAAcI,UAAY,GAE1BN,SAASO,KAAKC,UAAUC,OAAO,aAEjCN,EAAcC,iBAAiB,SAASC,IAClCA,EAAIK,gBAAkBL,EAAIM,SAC5BT,EAAcI,UAAY,GAE1BN,SAASO,KAAKC,UAAUC,OAAO,cAGnCG,OAAOR,iBAAiB,WAExB,SAASS,EAASR,GACC,WAAbA,EAAIS,OACNZ,EAAcI,UAAY,GAC1BM,OAAOG,oBAAoB,UAAWF,GAEtCb,SAASO,KAAKC,UAAUC,OAAO,c,iVCvBrCO,OAAOC,eAAeC,EAAAC,QAAS,aAAc,CACzCC,OAAO,IAEXF,EAAAC,QAAQE,QACR,SAAoCC,EAAKC,GACrC,GAAIA,EAAkBC,IAAIF,GACtB,MAAM,IAAIG,UAAU,sECP5B,MAGMC,EAAeC,KAAKC,MAAMC,aAAaC,QAHrB,oBAIlBC,EAAcJ,KAAKC,MAAMC,aAAaC,QAHtB,kBAKtB,IAAIE,EAAe,GACfC,EAAa,GAwBF,SAAAC,EAA2BC,GACxC,MAAMC,EAAapC,SAASC,cAAc,4BACpCoC,EAAcrC,SAASC,cAAc,8BAE3CmC,EAAWhC,iBAAiB,SAAS,KACnC4B,EAAaM,KAAKH,GAClBN,aAAaU,QArCO,kBAqCkBZ,KAAKa,UAAUR,OAEvDK,EAAYjC,iBAAiB,SAAS,KACpC6B,EAAWK,KAAKH,GAChBN,aAAaU,QAxCK,gBAwCkBZ,KAAKa,UAAUP,OAhCvDQ,QAAQC,IAAIhB,GAEPA,GACHG,aAAaU,QAZS,kBAYgBZ,KAAKa,UAAUR,IAGlDD,GACHF,aAAaU,QAfO,gBAegBZ,KAAKa,UAAUP,IAGhDP,EAAaiB,OAGhBX,EAAeL,KAAKC,MAAMC,aAAaC,QAtBjB,oBAoBtBD,aAAaU,QApBS,kBAoBgBZ,KAAKa,UAAUR,IAKlDD,EAAYY,OAGfV,EAAaN,KAAKC,MAAMC,aAAaC,QA3BjB,kBAyBpBD,aAAaU,QAzBO,gBAyBgBZ,KAAKa,UAAUP,ICvBrD,MAAMW,EAAgB5C,SAASC,cAAc,eACvC4C,EAAU7C,SAASC,cAAc,YAEvC,IAAI6C,EACAC,EAEJ,SAASC,EAAQ3C,GACf,IAAKA,EAAIM,OAAOsC,QAAQ,MACtB,QAUJ,SAAqBC,GACnB,MAAM5B,EAAMyB,EAAMI,MAAKC,GAAUA,EAAOF,KAAOG,OAAOH,KACtDJ,EAASxB,EACT,MAAMgC,eACJA,EAAcC,WACdA,EAAUC,aACVA,EAAYC,WACZA,EAAUC,SACVA,EAAQC,YACRA,EAAWC,MACXA,EAAKC,WACLA,GACEvC,EAEEwC,EAAUN,EAAaO,WAAWC,MAAM,EAAG,GAC3CC,EAAiBC,KAAKC,MAAMZ,GAC5Ba,EAAaP,EAAWQ,KAAK,MAE7BC,EAAa,oQAKuDX,WAAqBC,iHAIhEN,qPAOOQ,iEACcL,8LAMPQ,qKAICX,4JAIAc,yJAKJV,mYAcnCd,EAAc2B,mBAAmB,aAAcD,GA3EtDE,CADYnE,EAAIM,OAAOsC,QAAQ,MAAMC,IAErCpD,IACAoC,EAAkBY,GAElB9C,SAASO,KAAKC,UAAUiE,IAAI,UAyEvB,SAASC,EAAgBvC,GAC9BU,EAAQzC,iBAAiB,QAAS4C,GAClCD,EAAQZ,E,SC5FVnB,OAAOC,eAAe0D,EAAS,aAAc,CACzCvD,OAAO,IAEXuD,EAAQtD,QAER,SAAgCC,EAAKsD,EAAYxD,GAC7CyD,EAAgCxD,QAAQC,EAAKsD,GAC7CA,EAAWE,IAAIxD,EAAKF,IAHxB,IAKgCE,EAL5BuD,GAK4BvD,EALwByD,EAAA,WAMtCzD,EAAI0D,WAAa1D,EAAM,CACjCD,QAASC,G,ICXf2D,EAAS,IAAAC,QACTC,EAAQ,IAAAD,QAFH,MAAME,EAUXC,gBAAgBC,EAAOC,KAAKD,MAK1B,IACE,aAAaE,MACX,GAAGD,KAAKE,6BAAiDF,KAAKG,gBAAgBJ,KAC9EK,MAAKC,GAAOA,EAAIC,SAClB,MAAOC,GACPrD,QAAQC,IAAIoD,IAIhBT,qBAAqBU,EAAST,GAC5B,IACE,aAAaE,MACX,GAAGD,KAAKE,uBAAuBF,KAAKG,iBAAiBK,UAAgBT,KACrEK,MAAKC,GAAOA,EAAIC,SAClB,MAAOG,GACPvD,QAAQC,IAAIoD,MAIhBT,kBAKE,IACE,aAAaG,MACX,GAAGD,KAAKE,2BAAqCF,KAAKG,WAClDC,MAAKC,GAAOA,EAAIC,SAClB,MAAOG,GACPvD,QAAQC,IAAIoD,MAIhBG,YACEV,KAAKD,KAAO,EA7CdY,cAHAC,EAAAxB,EAAA,CAAAY,KAAAN,EAAS,C,kBAAG,kCACZkB,EAAAxB,EAAA,CAAAY,KAAAJ,EAAQ,C,kBAAG,8CAGTI,KAAKD,KAAO,EACZC,KAAKE,SAAW,gCAChBF,KAAKG,QAAU,6CCLG,IAAIN,EAEnB,SAASgB,EAAWjE,GACzB,OAAOA,EACJkE,KACC,EAACnD,GAAEA,EAAES,YAAEA,EAAW2C,aAAEA,EAAY1C,MAAEA,EAAKJ,aAAEA,EAAYK,WAAEA,MACrD,MAAMC,EAAUN,EAAaO,WAAWC,MAAM,EAAG,GAEjD,IAAIuC,EAEAnC,EADJmC,EAAW,IAAIC,KAAKF,GAAcG,cAElC,IAAIC,EAAe,uCACf7C,EAAWlB,OAAS,EACtByB,EAAaP,EAAWG,MAAM,EAAG,GAAGK,KAAK,MAAQ,UAClB,IAAtBR,EAAWlB,QACpB+D,EAAe,GACftC,EAAa,IAEbA,EAAaP,EAAWQ,KAAK,MAE/B,IACIsC,EAAe,kCAAkChD,IASrD,OAPKA,IACHgD,EAJe,6CAMZJ,IACHA,EALgB,yBAQX,kDACgCrD,mFAERyD,UAAqB/C,qFAGtBA,+HAGAQ,iDAEtBsC,6CACyBH,kEACczC,6DAMlDO,KAAK,ICjDV,MAAMuC,EAAO,CACXC,UAAW7G,SAASC,cAAc,yBAClC6G,UAAW9G,SAASC,cAAc,eAClC8G,WAAY/G,SAASC,cAAc,gBAGf,IAAImF,EAEnB,SAAS4B,EAAiB1B,EAAM2B,GACrC,IAAK3B,IAAS2B,GAA6B,IAAfA,EAC1B,OAEF,IAAIC,EAAS,GAMT5B,EAAO,IACT4B,GAAU,+CAGR5B,EAAO,IACT4B,GAAU,yCAGR5B,EAAO,IACT4B,GAAU,iDAGR5B,EAAO,IACT4B,GAAU,kCAlBW5B,EAAO,UAqB1BA,EAAO,IACT4B,GAAU,kCArBK5B,EAAO,UAwBxB4B,GAAU,mCAAmC5B,SAEzCA,EAAO,EAAI2B,IACbC,GAAU,kCA1BK5B,EAAO,UA6BpBA,EAAO,EAAI2B,IACbC,GAAU,kCA7BU5B,EAAO,UAgCzB2B,EAAa3B,EAAO,IACtB4B,GAAU,iDAGRD,EAAa3B,IACf4B,GAAU,kCAAkCD,UAG1CA,EAAa3B,IACf4B,GAAU,+CAEZN,EAAKC,UAAUvG,UAAY4G,ECvD7B,IAAIC,EAMG,SAASC,EAAWC,GACzB,IAAIC,EAAe,GAEnBD,EAAUE,SAAQC,IAChB,IAAIlG,EAAM6F,EAAUhE,MAAKsE,GAAMA,EAAGvE,KAAOsE,IACzCF,EAAahF,KAAKhB,MAKpB,OAFmBgG,EAAajB,KAAIoB,GAAMA,EAAGC,QAlBzB,IAAItC,GAEZuC,YAAYhC,MAI1B,SAAqBxD,GACnBgF,EAAYhF,EAAKyF,UCHnB,MAAMC,EAAU7H,SAASC,cAAc,YACjC6H,EAAY9H,SAASC,cAAc,yBACnC8H,EAAgB,IAAI3C,EAE1B,IAAI4C,EAAc,EAQX,SAASC,EAAc9F,GAE5BA,EAAK+F,QAAQX,SAAQC,KA+BvB,SAAwBlG,EAAK0E,GAC3B,MAAMmC,EAAS7G,EACf6G,EAAOtE,WAAamC,EA/BHoC,CAAeZ,EADZJ,EAAWI,EAAQa,eAIvC,IAAIC,EAAUnG,EAAK+F,QAKnB,OAJAL,EAAQtD,mBAAmB,YAAa6B,EAAWjE,EAAK+F,UACxDL,EAAQvH,UAAY8F,EAAWjE,EAAK+F,SACpClB,EAAiB7E,EAAKmD,KAAMnD,EAAKoG,aACjCT,EAAU1H,iBAAiB,QAASoI,GAC7BF,EAGF,SAASE,EAAiBC,GAC/B,GAA6B,OAAzBA,EAAM9H,OAAO+H,SAAiD,QAA7BD,EAAM9H,OAAOgI,YAChD,OAEF,MAAMrD,EAAOmD,EAAM9H,OAAOgI,YAEtBX,EADS,MAAT1C,EACYjC,OAAO2E,GAAe,EAClB,MAAT1C,EACKjC,OAAO2E,GAAe,EAEtB1C,EAEhByC,EAAca,UAAUZ,GAAarC,MAAKxD,IAExCuC,EADYuD,EAAc9F,OAlC5B4F,EAAca,YAAYjD,MAAKxD,IAE7BuC,EADYuD,EAAc9F,OCb9B,MAAM0G,EAAO,CACXC,aAAc9I,SAASC,cAAc,aACrCF,cAAeC,SAASC,cAAc,cACtC8I,MAAO/I,SAASC,cAAc,WAKhC,SAAS+I,EAAYP,GACnBA,EAAMQ,iBACNJ,EAAKE,MAAMvI,UAAU0I,OAAO,aAC5BL,EAAK9I,cAAcK,iBAAiB,QAAS4I,GACR,WAAjChJ,SAASO,KAAK4I,MAAMC,SACtBpJ,SAASO,KAAK4I,MAAMC,SAAW,OAE/BpJ,SAASO,KAAK4I,MAAMC,SAAW,SATnCP,EAAKC,aAAa1I,iBAAiB,QAAS4I,GCA5C,MAAMK,EAAgB,IAAIjE,EACpBkE,EAActJ,SAASC,cAAc,iBAErCsJ,GADUvJ,SAASC,cAAc,YACrBD,SAASC,cAAc,WACnCuJ,EAAYxJ,SAASC,cAAc,yBAEzC,IAAIwJ,EAAc,EA0BlB,SAASC,EAAevH,GACK,IAAvBA,EAAKwH,eAAoD,KAA7BL,EAAYlI,MAAMwI,QAChDJ,EAAUlJ,UAAY,GACtBiJ,EAAUjJ,UAAY,kEAEtB0G,EAAiB7E,EAAKmD,KAAMnD,EAAKoG,aAOnC,OAHA7D,EADYuD,EAAc9F,IAE1BqH,EAAUzI,oBAAoB,QAASyH,GACvCgB,EAAUpJ,iBAAiB,QAASyJ,GAC7B1H,EAAK+F,QAGd,SAAS2B,EAA0BpB,GACjC,GAA6B,OAAzBA,EAAM9H,OAAO+H,SAAiD,QAA7BD,EAAM9H,OAAOgI,YAChD,OAEF,MAAMrD,EAAOmD,EAAM9H,OAAOgI,YAEtBc,EADS,MAATnE,EACYjC,OAAOoG,GAAe,EAClB,MAATnE,EACKjC,OAAOoG,GAAe,EAEtBnE,EAEhB+D,EACGS,eAAeR,EAAYlI,MAAOqI,GAClC9D,KAAK+D,GArDS1J,SAASC,cAAc,gBAC/BG,iBAAiB,UAErB,SAAgBqI,GAGrB,GAFAA,EAAMQ,iBAE2B,KAA7BK,EAAYlI,MAAMwI,OACpB,OAGFL,EAAUjJ,UAAY,GACtBmJ,EAAc,EAEdJ,EAAcS,eAAeR,EAAYlI,MAAOqI,GAAa9D,MAAKxD,IAChE,GAA2B,IAAvBA,EAAKwH,cAEP,YADAJ,EAAUjJ,UAAY,kEAGxB,MAAM0F,EAAMiC,EAAc9F,GAC1BuH,EAAevH,GACfuC,EAAgBsB","sources":["src/js/componentsJs/toogleModal.js","node_modules/@swc/helpers/lib/_check_private_redeclaration.js","src/js/componentsJs/setLocalStorage.js","src/js/templates/renderModalFilm.js","node_modules/@swc/helpers/lib/_class_private_field_init.js","src/js/API/themoviedb-api.js","src/js/componentsJs/createCard.js","src/js/pagination/pagination.js","src/js/componentsJs/decodeGanre.js","src/js/componentsJs/generateCardList.js","src/js/componentsJs/modalFooter.js","src/js/API/search.js"],"sourcesContent":["export default function closeModal() {\n  const closeModalBtn = document.querySelector('[data-action=\"close-modal-1\"]');\n  const modalFilmCard = document.querySelector('.modal-film');\n  const backdropClose = document.querySelector('.backdrop');\n\n  closeModalBtn.addEventListener('click', evt => {\n    modalFilmCard.innerHTML = '';\n\n    document.body.classList.remove('hidden');\n  });\n  backdropClose.addEventListener('click', evt => {\n    if (evt.currentTarget === evt.target) {\n      modalFilmCard.innerHTML = '';\n\n      document.body.classList.remove('hidden');\n    }\n  });\n  window.addEventListener('keydown', onEscape);\n\n  function onEscape(evt) {\n    if (evt.code === 'Escape') {\n      modalFilmCard.innerHTML = '';\n      window.removeEventListener('keydown', onEscape);\n\n      document.body.classList.remove('hidden');\n    }\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _checkPrivateRedeclaration;\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\n","const LIBRARY_WATCHED = 'library-watched';\nconst LIBRARY_QUEUE = 'library-queie';\n\nconst watchedCards = JSON.parse(localStorage.getItem(LIBRARY_WATCHED));\nconst queuedCards = JSON.parse(localStorage.getItem(LIBRARY_QUEUE));\n\nlet arrayWatched = [];\nlet arrayQueue = [];\n\nconsole.log(watchedCards);\n\nif (!watchedCards) {\n  localStorage.setItem(LIBRARY_WATCHED, JSON.stringify(arrayWatched));\n}\n\nif (!queuedCards) {\n  localStorage.setItem(LIBRARY_QUEUE, JSON.stringify(arrayQueue));\n}\n\nif (!watchedCards.length) {\n  localStorage.setItem(LIBRARY_WATCHED, JSON.stringify(arrayWatched));\n} else {\n  arrayWatched = JSON.parse(localStorage.getItem(LIBRARY_WATCHED));\n}\n\nif (!queuedCards.length) {\n  localStorage.setItem(LIBRARY_QUEUE, JSON.stringify(arrayQueue));\n} else {\n  arrayQueue = JSON.parse(localStorage.getItem(LIBRARY_QUEUE));\n}\n\nexport default function addFilmsToLibrary(data) {\n  const btnAddfilm = document.querySelector('.btn-list__item-btn--add');\n  const btnAddQueie = document.querySelector('.btn-list__item-btn--queie');\n\n  btnAddfilm.addEventListener('click', () => {\n    arrayWatched.push(data);\n    localStorage.setItem(LIBRARY_WATCHED, JSON.stringify(arrayWatched));\n  });\n  btnAddQueie.addEventListener('click', () => {\n    arrayQueue.push(data);\n    localStorage.setItem(LIBRARY_QUEUE, JSON.stringify(arrayQueue));\n  });\n}\n","import closeModal from '../componentsJs/toogleModal';\nimport addFilmsToLibrary from '../componentsJs/setLocalStorage';\n\nconst modalFilmCard = document.querySelector('.modal-film');\nconst getList = document.querySelector('.gallery');\n\nlet addLib;\nlet cards;\n\nfunction onclick(evt) {\n  if (!evt.target.closest('li')) {\n    return;\n  }\n  const ids = evt.target.closest('li').id;\n  renderFilms(ids);\n  closeModal();\n  addFilmsToLibrary(addLib);\n\n  document.body.classList.add('hidden');\n}\n\nfunction renderFilms(id) {\n  const obj = cards.find(option => option.id === Number(id));\n  addLib = obj;\n  const {\n    original_title,\n    popularity,\n    vote_average,\n    vote_count,\n    overview,\n    poster_path,\n    title,\n    genre_name,\n  } = obj;\n\n  const average = vote_average.toString().slice(0, 3);\n  const popularityCalc = Math.floor(popularity);\n  const genreNames = genre_name.join(', ');\n\n  const renderFilm = `\n  <div class='backdrop'>\n    <div class='modal-container'>\n      <button class=\"btn-close\" type=\"button\" data-action='close-modal-1'></button>\n      <div class='cont-preview' >\n        <img class='cont-prew__image' src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${title}\" loading=\"lazy\" />\n      </div>\n      \n      <div class='modal-content'>\n        <h3 class='film-title'>${original_title}</h3>\n          <table class='table'>\n        <tbody>\n          <tr>\n            <td><p class='table-text__left'>Vote / Votes</p></td>\n            <td>\n              <p class='table-text__right'>\n                <span class='average'>${average}</span>\n                <span class='awerage-dot'> /</span> ${vote_count}\n              </p>\n            </td>\n            </tr>\n          <tr>\n            <td><p class='table-text__left'>Popularity</p></td>\n            <td><p class='table-text__right'>${popularityCalc}</p></td>\n          </tr>\n            <tr>\n            <td><p class='table-text__left'>Original Title</p></td>\n            <td><p class='table-text__right '>${original_title}</p></td>\n          </tr>\n            <tr>\n            <td><p class='table-text__left'>Genre</p></td>\n            <td><p class='table-text__right '>${genreNames}</p></td>\n          </tr>\n        </tbody>\n        </table>\n          <p class='descr-text'>About</p>\n          <p class='descr-text-content '> ${overview}</p>\n        <ul class='btn-list'>\n          <li class='btn-list__item'>\n           <button class='btn-list__item-btn--add' type=\"button\">add to Watched</button>\n          </li>\n          <li class='btn-list__item'>\n            <button class='btn-list__item-btn--queie' type=\"button\">add to queue</button>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n  `;\n\n  return modalFilmCard.insertAdjacentHTML('afterbegin', renderFilm);\n}\nexport function renderModalFilm(data) {\n  getList.addEventListener('click', onclick);\n  cards = data;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateFieldInit;\nvar _checkPrivateRedeclaration = _interopRequireDefault(require(\"./_check_private_redeclaration\"));\nfunction _classPrivateFieldInit(obj, privateMap, value) {\n    (0, _checkPrivateRedeclaration).default(obj, privateMap);\n    privateMap.set(obj, value);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","export class ThemoviedbAPI {\n  #BASE_URL = 'https://api.themoviedb.org/3/';\n  #API_KEY = '?api_key=7a4cd4317772102a9b88ef6a54b71590';\n\n  constructor() {\n    this.page = 1;\n    this.BASE_URL = 'https://api.themoviedb.org/3/';\n    this.API_KEY = '?api_key=7a4cd4317772102a9b88ef6a54b71590';\n  }\n\n  async getMovies(page = this.page) {\n    const trending = 'trending';\n    const mediaType = 'movie';\n    const timeWindow = 'day';\n\n    try {\n      return await fetch(\n        `${this.BASE_URL}${trending}/${mediaType}/${timeWindow}${this.API_KEY}&page=${page}`\n      ).then(res => res.json());\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async getSearchMovie(keyword, page) {\n    try {\n      return await fetch(\n        `${this.BASE_URL}search/movie${this.API_KEY}&query=${keyword}&page=${page}`\n      ).then(res => res.json());\n    } catch (arr) {\n      console.log(err);\n    }\n  }\n\n  async getGanres() {\n    const genre = 'genre';\n    const option = 'movie';\n    const list = 'list';\n\n    try {\n      return await fetch(\n        `${this.BASE_URL}${genre}/${option}/${list}${this.API_KEY}`\n      ).then(res => res.json());\n    } catch (arr) {\n      console.log(err);\n    }\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n}\n","import { ThemoviedbAPI } from '../API/themoviedb-api';\n\nconst themoviedbAPI = new ThemoviedbAPI();\n\nexport function createCard(data) {\n  return data\n    .map(\n      ({ id, poster_path, release_date, title, vote_average, genre_name }) => {\n        const average = vote_average.toString().slice(0, 3);\n\n        let dateYear;\n        dateYear = new Date(release_date).getFullYear();\n        let genreNames;\n        let verticalLine = `<span class=\"vertical-line\">|</span>`;\n        if (genre_name.length > 3) {\n          genreNames = genre_name.slice(0, 2).join(', ') + ', Other';\n        } else if (genre_name.length === 0) {\n          verticalLine = '';\n          genreNames = '';\n        } else {\n          genreNames = genre_name.join(', ');\n        }\n        let coverImage = 'https://i.ibb.co/JyBCdzw/sinema-empty.jpg';\n        let originPoster = `https://image.tmdb.org/t/p/w500${poster_path}`;\n        let avaibleYear = 'Info is not available';\n        if (!poster_path) {\n          originPoster = coverImage;\n        }\n        if (!dateYear) {\n          dateYear = avaibleYear;\n        }\n\n        return `\n          <li class=\"card_item grid-item\" id=${id}>\n            <div class=\"card__image\">\n              <img class=\"image\" src=${originPoster} alt=\"${title}\" loading=\"lazy\" />\n              </div>\n\n            <h1 class=\"card__title\">${title}</h1>\n            <div class=\"card__info\">\n              <div class=\"card__genres\">\n                <span class=\"genre\">${genreNames}</span>\n              </div>\n              ${verticalLine}\n              <span class=\"card__year\">${dateYear}</span>\n              <span class='card__average on-library'>${average}</span>\n            </div>\n          </li>\n        `;\n      }\n    )\n    .join('');\n}\n","import { ThemoviedbAPI } from '../API/themoviedb-api';\n\nconst refs = {\n  container: document.querySelector('.pagination-container'),\n  leftArrow: document.querySelector('.left-arrow'),\n  rightArrow: document.querySelector('.rightArrow'),\n};\n\nconst themoviedbAPI = new ThemoviedbAPI();\n\nexport function renderPagination(page, totalPages) {\n  if (!page || !totalPages || totalPages === 1) {\n    return;\n  }\n  let markup = '';\n  const beforePrevPage = page - 2;\n  const prevPage = page - 1;\n  const nextPage = page + 1;\n  const afterNextPage = page + 2;\n\n  if (page > 1) {\n    markup += `<li class=\"button style_color\">&loarr;</li>`;\n  }\n\n  if (page > 2) {\n    markup += `<li class=\"button style_enpty\">1</li>`;\n  }\n\n  if (page > 4) {\n    markup += `<li class=\"button\">&middot&middot&middot</li>`;\n  }\n\n  if (page > 3) {\n    markup += `<li class=\"button style_enpty\">${beforePrevPage}</li>`;\n  }\n\n  if (page > 1) {\n    markup += `<li class=\"button style_enpty\">${prevPage}</li>`;\n  }\n\n  markup += `<li class = 'pagination-active'>${page}</li>`;\n\n  if (page + 1 < totalPages) {\n    markup += `<li class=\"button style_enpty\">${nextPage}</li>`;\n  }\n\n  if (page + 2 < totalPages) {\n    markup += `<li class=\"button style_enpty\">${afterNextPage}</li>`;\n  }\n\n  if (totalPages > page + 3) {\n    markup += `<li class=\"button\">&middot&middot&middot</li>`;\n  }\n\n  if (totalPages > page) {\n    markup += `<li class=\"button style_enpty\">${totalPages}</li>`;\n  }\n\n  if (totalPages > page) {\n    markup += '<li class=\"button style_color\">&roarr;</li>';\n  }\n  refs.container.innerHTML = markup;\n}\n","import { ThemoviedbAPI } from '../API/themoviedb-api';\n\nconst themoviedbAPI = new ThemoviedbAPI();\n\nthemoviedbAPI.getGanres().then(setGenreArr);\n\nlet genresArr;\n\nfunction setGenreArr(data) {\n  genresArr = data.genres;\n}\n\nexport function serchGenre(curentArr) {\n  let curentGenres = [];\n\n  curentArr.forEach(element => {\n    let obj = genresArr.find(el => el.id === element);\n    curentGenres.push(obj);\n  });\n\n  const genrsNames = curentGenres.map(el => el.name);\n\n  return genrsNames;\n}\n","import { ThemoviedbAPI } from '../API/themoviedb-api';\nimport { createCard } from './createCard';\nimport { renderModalFilm } from '../templates/renderModalFilm';\nimport { renderPagination } from '../pagination/pagination';\nimport { serchGenre } from './decodeGanre';\n\nconst gallery = document.querySelector('.gallery');\nconst container = document.querySelector('.pagination-container');\nconst themoviedbAPI = new ThemoviedbAPI();\n\nlet currentPage = 1;\nexport function getApiList() {\n  themoviedbAPI.getMovies().then(data => {\n    const arr = handleSuccess(data);\n    renderModalFilm(arr);\n  });\n}\n\nexport function handleSuccess(data) {\n  // console.log(data);\n  data.results.forEach(element => {\n    const genreName = serchGenre(element.genre_ids);\n    const newObj = recordingGenre(element, genreName);\n  });\n\n  let newData = data.results;\n  gallery.insertAdjacentHTML('beforeend', createCard(data.results));\n  gallery.innerHTML = createCard(data.results);\n  renderPagination(data.page, data.total_pages);\n  container.addEventListener('click', handlePagination);\n  return newData;\n}\n\nexport function handlePagination(event) {\n  if (event.target.tagName !== 'LI' || event.target.textContent === '...') {\n    return;\n  }\n  const page = event.target.textContent;\n  if (page === '⇽') {\n    currentPage = Number(currentPage) - 1;\n  } else if (page === '⇾') {\n    currentPage = Number(currentPage) + 1;\n  } else {\n    currentPage = page;\n  }\n  themoviedbAPI.getMovies(currentPage).then(data => {\n    const arr = handleSuccess(data);\n    renderModalFilm(arr);\n  });\n}\n\nfunction recordingGenre(obj, arr) {\n  const newObj = obj;\n  newObj.genre_name = arr;\n\n  return newObj;\n}\n\ngetApiList();\n","const refs = {\n  openModalBtn: document.querySelector('.open-btn'),\n  closeModalBtn: document.querySelector('.close-btn'),\n  modal: document.querySelector('.modal'),\n};\n\nrefs.openModalBtn.addEventListener('click', toggleModal);\n\nfunction toggleModal(event) {\n  event.preventDefault();\n  refs.modal.classList.toggle('is-hidden');\n  refs.closeModalBtn.addEventListener('click', toggleModal);\n  if (document.body.style.overflow === 'hidden') {\n    document.body.style.overflow = 'auto';\n  } else {\n    document.body.style.overflow = 'hidden';\n  }\n}\nexport default function callModal() {\n  document.addEventListener('keydown', event => {\n    if (event.key === 'Escape') {\n      return toggleModal(event);\n    }\n  });\n}\n","import { ThemoviedbAPI } from './themoviedb-api';\nimport { renderPagination } from '../pagination/pagination';\nimport { handleSuccess } from '../componentsJs/generateCardList';\nimport { renderModalFilm } from '../templates/renderModalFilm';\nimport { handlePagination } from '../componentsJs/generateCardList';\n\nconst themoviedbAPI = new ThemoviedbAPI();\nconst searchInput = document.querySelector('.search-input');\nconst gallery = document.querySelector('.gallery');\nconst errorText = document.querySelector('.error');\nconst container = document.querySelector('.pagination-container');\n\nlet currentPage = 1;\n\nconst searchForm = document.querySelector('.search-form');\nsearchForm.addEventListener('submit', search);\n\nexport function search(event) {\n  event.preventDefault();\n\n  if (searchInput.value.trim() === '') {\n    return;\n  }\n\n  errorText.innerHTML = '';\n  currentPage = 1;\n\n  themoviedbAPI.getSearchMovie(searchInput.value, currentPage).then(data => {\n    if (data.total_results === 0) {\n      errorText.innerHTML = `Search result not successful. Enter the correct movie name and`;\n      return;\n    }\n    const arr = handleSuccess(data);\n    processSuccess(data);\n    renderModalFilm(arr);\n  });\n}\n\nfunction processSuccess(data) {\n  if (data.total_results === 0 || searchInput.value.trim() === '') {\n    container.innerHTML = '';\n    errorText.innerHTML = `Search result not successful. Enter the correct movie name and`;\n  } else {\n    renderPagination(data.page, data.total_pages);\n  }\n\n  const arr = handleSuccess(data);\n  renderModalFilm(arr);\n  container.removeEventListener('click', handlePagination);\n  container.addEventListener('click', handlePaginationForSearch);\n  return data.results;\n}\n\nfunction handlePaginationForSearch(event) {\n  if (event.target.tagName !== 'LI' || event.target.textContent === '...') {\n    return;\n  }\n  const page = event.target.textContent;\n  if (page === '⇽') {\n    currentPage = Number(currentPage) - 1;\n  } else if (page === '⇾') {\n    currentPage = Number(currentPage) + 1;\n  } else {\n    currentPage = page;\n  }\n  themoviedbAPI\n    .getSearchMovie(searchInput.value, currentPage)\n    .then(processSuccess);\n}\n"],"names":["$b7e02aaeb3f80b05$export$2e2bcd8739ae039","closeModalBtn","document","querySelector","modalFilmCard","backdropClose","addEventListener","evt","innerHTML","body","classList","remove","currentTarget","target","window","onEscape","code","removeEventListener","Object","defineProperty","module","exports","value","default","obj","privateCollection","has","TypeError","$f53c4050d74ee576$var$watchedCards","JSON","parse","localStorage","getItem","$f53c4050d74ee576$var$queuedCards","$f53c4050d74ee576$var$arrayWatched","$f53c4050d74ee576$var$arrayQueue","$f53c4050d74ee576$export$2e2bcd8739ae039","data","btnAddfilm","btnAddQueie","push","setItem","stringify","console","log","length","$eb5d7b1695745393$var$modalFilmCard","$eb5d7b1695745393$var$getList","$eb5d7b1695745393$var$addLib","$eb5d7b1695745393$var$cards","$eb5d7b1695745393$var$onclick","closest","id","find","option","Number","original_title","popularity","vote_average","vote_count","overview","poster_path","title","genre_name","average","toString","slice","popularityCalc","Math","floor","genreNames","join","renderFilm","insertAdjacentHTML","$eb5d7b1695745393$var$renderFilms","add","$eb5d7b1695745393$export$73c309201c7743a4","$bb98491953509995$exports","privateMap","$bb98491953509995$var$_checkPrivateRedeclaration","set","parcelRequire","__esModule","$4798b1163b53507f$var$_BASE_URL","WeakMap","$4798b1163b53507f$var$_API_KEY","$4798b1163b53507f$export$f0fa273f55fa4fe9","async","page","this","fetch","BASE_URL","API_KEY","then","res","json","err","keyword","arr","resetPage","constructor","$parcel$interopDefault","$f57d1f9f8a4a695e$export$b7316deff43c35f7","map","release_date","dateYear","Date","getFullYear","verticalLine","originPoster","$6077aa4079e9cd36$var$refs","container","leftArrow","rightArrow","$6077aa4079e9cd36$export$825408fbca4f2040","totalPages","markup","$e4ac023b5b82985a$var$genresArr","$e4ac023b5b82985a$export$816c344f8c28629","curentArr","curentGenres","forEach","element","el","name","getGanres","genres","$4f0b9b62dbd05c77$var$gallery","$4f0b9b62dbd05c77$var$container","$4f0b9b62dbd05c77$var$themoviedbAPI","$4f0b9b62dbd05c77$var$currentPage","$4f0b9b62dbd05c77$export$3134aad02465a5ae","results","newObj","$4f0b9b62dbd05c77$var$recordingGenre","genre_ids","newData","total_pages","$4f0b9b62dbd05c77$export$db9418c39585fd07","event","tagName","textContent","getMovies","$dff7f221eb395d99$var$refs","openModalBtn","modal","$dff7f221eb395d99$var$toggleModal","preventDefault","toggle","style","overflow","$4b58548a2d92c2fe$var$themoviedbAPI","$4b58548a2d92c2fe$var$searchInput","$4b58548a2d92c2fe$var$errorText","$4b58548a2d92c2fe$var$container","$4b58548a2d92c2fe$var$currentPage","$4b58548a2d92c2fe$var$processSuccess","total_results","trim","$4b58548a2d92c2fe$var$handlePaginationForSearch","getSearchMovie"],"version":3,"file":"index.f7a55dbf.js.map"}