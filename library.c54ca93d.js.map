{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_check_private_redeclaration.js","node_modules/@swc/helpers/lib/_class_private_field_init.js","src/js/API/themoviedb-api.js","src/js/componentsJs/createCard.js","src/js/componentsJs/library.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _checkPrivateRedeclaration;\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateFieldInit;\nvar _checkPrivateRedeclaration = _interopRequireDefault(require(\"./_check_private_redeclaration\"));\nfunction _classPrivateFieldInit(obj, privateMap, value) {\n    (0, _checkPrivateRedeclaration).default(obj, privateMap);\n    privateMap.set(obj, value);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","export class ThemoviedbAPI {\n  #BASE_URL = 'https://api.themoviedb.org/3/';\n  #API_KEY = '?api_key=7a4cd4317772102a9b88ef6a54b71590';\n\n  constructor() {\n    this.page = 1;\n    this.BASE_URL = 'https://api.themoviedb.org/3/';\n    this.API_KEY = '?api_key=7a4cd4317772102a9b88ef6a54b71590';\n  }\n\n  async getMovies(page = this.page) {\n    const trending = 'trending';\n    const mediaType = 'movie';\n    const timeWindow = 'day';\n\n    try {\n      return await fetch(\n        `${this.BASE_URL}${trending}/${mediaType}/${timeWindow}${this.API_KEY}&page=${page}`\n      ).then(res => res.json());\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async getSearchMovie(keyword, page) {\n    try {\n      return await fetch(\n        `${this.BASE_URL}search/movie${this.API_KEY}&query=${keyword}&page=${page}`\n      ).then(res => res.json());\n    } catch (arr) {\n      console.log(err);\n    }\n  }\n\n  async getGanres() {\n    const genre = 'genre';\n    const option = 'movie';\n    const list = 'list';\n\n    try {\n      return await fetch(\n        `${this.BASE_URL}${genre}/${option}/${list}${this.API_KEY}`\n      ).then(res => res.json());\n    } catch (arr) {\n      console.log(err);\n    }\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n}\n","import { ThemoviedbAPI } from '../API/themoviedb-api';\n\nconst themoviedbAPI = new ThemoviedbAPI();\n\nexport function createCard(data) {\n  return data\n    .map(\n      ({ id, poster_path, release_date, title, vote_average, genre_name }) => {\n        const average = vote_average.toString().slice(0, 3);\n\n        let dateYear;\n        dateYear = new Date(release_date).getFullYear();\n        let genreNames;\n        let verticalLine = `<span class=\"vertical-line\">|</span>`;\n        if (genre_name.length > 3) {\n          genreNames = genre_name.slice(0, 2).join(', ') + ', Other';\n        } else if (genre_name.length === 0) {\n          verticalLine = '';\n          genreNames = '';\n        } else {\n          genreNames = genre_name.join(', ');\n        }\n        let coverImage = 'https://i.ibb.co/JyBCdzw/sinema-empty.jpg';\n        let originPoster = `https://image.tmdb.org/t/p/w500${poster_path}`;\n        let avaibleYear = 'Info is not available';\n        if (!poster_path) {\n          originPoster = coverImage;\n        }\n        if (!dateYear) {\n          dateYear = avaibleYear;\n        }\n\n        return `\n          <li class=\"card_item grid-item\" id=${id}>\n            <div class=\"card__image\">\n              <img class=\"image\" src=${originPoster} alt=\"${title}\" loading=\"lazy\" />\n              </div>\n\n            <h1 class=\"card__title\">${title}</h1>\n            <div class=\"card__info\">\n              <div class=\"card__genres\">\n                <span class=\"genre\">${genreNames}</span>\n              </div>\n              ${verticalLine}\n              <span class=\"card__year\">${dateYear}</span>\n              <span class='card__average on-library'>${average}</span>\n            </div>\n          </li>\n        `;\n      }\n    )\n    .join('');\n}\n","import { createCard } from './createCard';\n\nconst LIBRARY_WATCHED = 'library-watched';\nconst LIBRARY_QUEUE = 'library-queie';\nconst gallery = document.querySelector('.gallery');\nconst watchedCards = JSON.parse(localStorage.getItem(LIBRARY_WATCHED));\nconst queuedCards = JSON.parse(localStorage.getItem(LIBRARY_QUEUE));\nconst watchedBtn = document.getElementById('watched-button');\nconst queueBtn = document.getElementById('queue-button');\nconst libraryPlaceholder = document.querySelector('.placeholder');\n\nwatchedBtn.classList.add('active');\ngallery.innerHTML = createCard(watchedCards);\n\nif (watchedCards.length !== 0) {\n  libraryPlaceholder.style.display = 'none';\n}\n\nwatchedBtn.addEventListener('click', watchCards);\nqueueBtn.addEventListener('click', queueCards);\n\nfunction watchCards(evt) {\n  evt.preventDefault();\n  togglePlaceholder(watchedCards);\n  gallery.innerHTML = createCard(watchedCards);\n  queueBtn.classList.remove('active');\n  watchedBtn.classList.add('active');\n}\n\nfunction queueCards(evt) {\n  evt.preventDefault();\n  togglePlaceholder(queuedCards);\n  gallery.innerHTML = createCard(queuedCards);\n  watchedBtn.classList.remove('active');\n  queueBtn.classList.add('active');\n}\n\nfunction togglePlaceholder(collection) {\n  if (collection.length) {\n    libraryPlaceholder.style.display = 'none';\n  } else {\n    libraryPlaceholder.style.display = 'block';\n  }\n}\n"],"names":["Object","defineProperty","module","exports","value","default","obj","privateCollection","has","TypeError","$bb98491953509995$exports","privateMap","$bb98491953509995$var$_checkPrivateRedeclaration","set","parcelRequire","__esModule","$4798b1163b53507f$var$_BASE_URL","WeakMap","$4798b1163b53507f$var$_API_KEY","async","page","this","fetch","BASE_URL","API_KEY","then","res","json","err","console","log","keyword","arr","resetPage","constructor","$parcel$interopDefault","$f57d1f9f8a4a695e$export$b7316deff43c35f7","data","map","id","poster_path","release_date","title","vote_average","genre_name","average","toString","slice","dateYear","genreNames","Date","getFullYear","verticalLine","length","join","originPoster","$7438d306fb8354be$var$gallery","document","querySelector","$7438d306fb8354be$var$watchedCards","JSON","parse","localStorage","getItem","$7438d306fb8354be$var$queuedCards","$7438d306fb8354be$var$watchedBtn","getElementById","$7438d306fb8354be$var$queueBtn","$7438d306fb8354be$var$libraryPlaceholder","$7438d306fb8354be$var$togglePlaceholder","collection","style","display","classList","add","innerHTML","addEventListener","evt","preventDefault","remove"],"version":3,"file":"library.c54ca93d.js.map"}