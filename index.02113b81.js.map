{"mappings":"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","sources":["src/js/componentsJs/setLocalStorage.js","src/js/componentsJs/modalFooter.js","src/js/API/search.js","src/js/componentsJs/makeSpinner.js","src/index.js"],"sourcesContent":["// import removeFilmsFromLibrary from './removeCard';\n\nconst LIBRARY_WATCHED = 'library-watched';\nconst LIBRARY_QUEUE = 'library-queie';\n\nconst watchedCards = JSON.parse(localStorage.getItem(LIBRARY_WATCHED));\nconst queuedCards = JSON.parse(localStorage.getItem(LIBRARY_QUEUE));\n\nlet arrayWatched = [];\nlet arrayQueue = [];\n\nif (!watchedCards) {\n  localStorage.setItem(LIBRARY_WATCHED, JSON.stringify(arrayWatched));\n}\n\nif (!watchedCards.length) {\n  localStorage.setItem(LIBRARY_WATCHED, JSON.stringify(arrayWatched));\n} else {\n  arrayWatched = JSON.parse(localStorage.getItem(LIBRARY_WATCHED));\n}\n\nif (!queuedCards) {\n  localStorage.setItem(LIBRARY_QUEUE, JSON.stringify(arrayQueue));\n}\n\nif (!queuedCards.length) {\n  localStorage.setItem(LIBRARY_QUEUE, JSON.stringify(arrayQueue));\n} else {\n  arrayQueue = JSON.parse(localStorage.getItem(LIBRARY_QUEUE));\n}\n","const refs = {\n  openModalBtn: document.querySelector('.open-btn'),\n  closeModalBtn: document.querySelector('.close-btn'),\n  modal: document.querySelector('.modal'),\n};\n\nrefs.openModalBtn.addEventListener('click', toggleModal);\n\nfunction toggleModal(event) {\n  event.preventDefault();\n  refs.modal.classList.toggle('is-hidden');\n  refs.closeModalBtn.addEventListener('click', toggleModal);\n  if (document.body.style.overflow === 'hidden') {\n    document.body.style.overflow = 'auto';\n  } else {\n    document.body.style.overflow = 'hidden';\n  }\n  document.addEventListener('keydown', event => {\n    if (event.key === 'Escape') {\n      return toggleModal(event);\n    }\n  });\n}\n","import { ThemoviedbAPI } from './themoviedb-api';\nimport { renderPagination } from '../pagination/pagination';\nimport { handleSuccess } from '../componentsJs/generateCardList';\nimport { renderModalFilm } from '../templates/renderModalFilm';\nimport { handlePagination } from '../componentsJs/generateCardList';\nimport showSpinner from '../componentsJs/makeSpinner';\n\nconst themoviedbAPI = new ThemoviedbAPI();\nconst searchInput = document.querySelector('.search-input');\nconst gallery = document.querySelector('.gallery');\nconst errorText = document.querySelector('.error');\nconst container = document.querySelector('.pagination-container');\n\nlet currentPage = 1;\n\nconst searchForm = document.querySelector('.search-form');\nsearchForm.addEventListener('submit', search);\n\nexport function search(event) {\n  event.preventDefault();\n\n  if (searchInput.value.trim() === '') {\n    errorText.classList.add('empty');\n    errorText.innerHTML = 'Please enter any text';\n    errorText.classList.add('empty');\n    return;\n  }\n\n  errorText.innerHTML = '';\n  currentPage = 1;\n  showSpinner('show');\n\n  themoviedbAPI.getSearchMovie(searchInput.value, currentPage).then(data => {\n    if (data.total_results === 0) {\n      errorText.innerHTML = `Search result not successful. Enter the correct movie name and`;\n      errorText.style.color = '#ff001b';\n      showSpinner('hide');\n      return;\n    }\n    const arr = handleSuccess(data);\n    processSuccess(data);\n    renderModalFilm(arr);\n    showSpinner('hide');\n  });\n}\n\nfunction processSuccess(data) {\n  if (data.total_results === 0 || searchInput.value.trim() === '') {\n    container.innerHTML = '';\n    errorText.innerHTML = `Search result not successful. Enter the correct movie name and`;\n  } else {\n    renderPagination(data.page, data.total_pages);\n  }\n\n  const arr = handleSuccess(data);\n  renderModalFilm(arr);\n  container.removeEventListener('click', handlePagination);\n  container.addEventListener('click', handlePaginationForSearch);\n  return data.results;\n}\n\nfunction handlePaginationForSearch(event) {\n  if (event.target.tagName !== 'LI' || event.target.textContent === '...') {\n    return;\n  }\n  const page = event.target.textContent;\n  if (page === '⇽') {\n    currentPage = Number(currentPage) - 1;\n  } else if (page === '⇾') {\n    currentPage = Number(currentPage) + 1;\n  } else {\n    currentPage = page;\n  }\n  themoviedbAPI\n    .getSearchMovie(searchInput.value, currentPage)\n    .then(processSuccess);\n}\n","const spinner = document.querySelector('.load-wrapp');\n\nexport default function showSpinner(search) {\n  if (search === 'show') {\n    spinner.classList.remove('is-hidden');\n  }\n  if (search === 'hide') {\n    spinner.classList.add('is-hidden');\n  }\n}\n","import './sass/index.scss';\nimport './js/componentsJs/setLocalStorage'\nimport { renderModalFilm } from './js/templates/renderModalFilm';\nimport { getApiList } from './js/componentsJs/generateCardList';\nimport callModal from './js/componentsJs/modalFooter';\nimport { search } from './js/API/search';\nimport topFunction from './js/componentsJs/scroolUp';\n\ngetApiList();\n"],"names":["$f53c4050d74ee576$var$watchedCards","JSON","parse","localStorage","getItem","$f53c4050d74ee576$var$queuedCards","$f53c4050d74ee576$var$arrayWatched","$f53c4050d74ee576$var$arrayQueue","setItem","stringify","length","$dff7f221eb395d99$var$refs","openModalBtn","document","querySelector","closeModalBtn","modal","addEventListener","$dff7f221eb395d99$var$toggleModal","event1","preventDefault","classList","toggle","body","style","overflow","event","key","$696Am","parcelRequire","$79acd3476ca220c3$var$spinner","$79acd3476ca220c3$export$2e2bcd8739ae039","search","remove","add","$4b58548a2d92c2fe$var$themoviedbAPI","ThemoviedbAPI","$4b58548a2d92c2fe$var$searchInput","$4b58548a2d92c2fe$var$errorText","$4b58548a2d92c2fe$var$container","$4b58548a2d92c2fe$var$currentPage","$4b58548a2d92c2fe$var$processSuccess","data","total_results","value","trim","innerHTML","$8huCE","renderPagination","page","total_pages","arr","$6MKTW","handleSuccess","$kcQhl","renderModalFilm","removeEventListener","handlePagination","$4b58548a2d92c2fe$var$handlePaginationForSearch","results","target","tagName","textContent","Number","getSearchMovie","then","color","getApiList"],"version":3,"file":"index.02113b81.js.map"}