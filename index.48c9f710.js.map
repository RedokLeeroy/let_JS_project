{"mappings":"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","sources":["src/js/componentsJs/toogleModal.js","node_modules/@swc/helpers/lib/_check_private_redeclaration.js","src/js/componentsJs/setLocalStorage.js","src/js/templates/renderModalFilm.js","node_modules/@swc/helpers/lib/_class_private_field_init.js","src/js/API/themoviedb-api.js","src/js/componentsJs/createCard.js","src/js/pagination/pagination.js","src/js/componentsJs/decodeGanre.js","src/js/componentsJs/generateCardList.js","src/js/componentsJs/modalFooter.js","src/js/API/search.js"],"sourcesContent":["export default function closeModal() {\n  const closeModalBtn = document.querySelector('[data-action=\"close-modal-1\"]');\n  const modalFilmCard = document.querySelector('.modal-film');\n  const backdropClose = document.querySelector('.backdrop');\n\n  closeModalBtn.addEventListener('click', evt => {\n    modalFilmCard.innerHTML = '';\n\n    document.body.classList.remove('hidden');\n  });\n  backdropClose.addEventListener('click', evt => {\n    if (evt.currentTarget === evt.target) {\n      modalFilmCard.innerHTML = '';\n\n      document.body.classList.remove('hidden');\n    }\n  });\n  window.addEventListener('keydown', onEscape);\n\n  function onEscape(evt) {\n    if (evt.code === 'Escape') {\n      modalFilmCard.innerHTML = '';\n      window.removeEventListener('keydown', onEscape);\n\n      document.body.classList.remove('hidden');\n    }\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _checkPrivateRedeclaration;\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\n","const LIBRARY_WATCHED = 'library-watched';\nconst LIBRARY_QUEUE = 'library-queie';\nlet arrayWatched = [];\nlet arrayQueue = [];\nlocalStorage.setItem(LIBRARY_WATCHED, JSON.stringify(arrayWatched));\nlocalStorage.setItem(LIBRARY_QUEUE, JSON.stringify(arrayQueue));\n\nexport default function addFilmsToLibrary(data) {\n  const btnAddfilm = document.querySelector('.btn-list__item-btn--add');\n  const btnAddQueie = document.querySelector('.btn-list__item-btn--queie');\n\n  btnAddfilm.addEventListener('click', () => {\n    arrayWatched.push(data);\n    localStorage.setItem(LIBRARY_WATCHED, JSON.stringify(arrayWatched));\n  });\n  btnAddQueie.addEventListener('click', () => {\n    arrayQueue.push(data);\n    localStorage.setItem(LIBRARY_QUEUE, JSON.stringify(arrayQueue));\n  });\n}\n","import closeModal from '../componentsJs/toogleModal';\nimport addFilmsToLibrary from '../componentsJs/setLocalStorage';\n\nconst modalFilmCard = document.querySelector('.modal-film');\nconst getList = document.querySelector('.gallery');\n\nlet addLib;\nlet cards;\n\nfunction onclick(evt) {\n  if (!evt.target.closest('li')) {\n    return;\n  }\n  const ids = evt.target.closest('li').id;\n  renderFilms(ids);\n  closeModal();\n  addFilmsToLibrary(addLib);\n\n  document.body.classList.add('hidden');\n}\n\nfunction renderFilms(id) {\n  const obj = cards.find(option => option.id === Number(id));\n  addLib = obj;\n  const {\n    original_title,\n    popularity,\n    vote_average,\n    vote_count,\n    overview,\n    poster_path,\n    title,\n    genre_name,\n  } = obj;\n\n  const average = vote_average.toString().slice(0, 3);\n  const popularityCalc = Math.floor(popularity);\n  const genreNames = genre_name.join(', ');\n\n  const renderFilm = `\n  <div class='backdrop'>\n    <div class='modal-container'>\n      <button class=\"btn-close\" type=\"button\" data-action='close-modal-1'></button>\n      <div class='cont-preview' >\n        <img class='cont-prew__image' src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${title}\" loading=\"lazy\" />\n      </div>\n      \n      <div class='modal-content'>\n        <h3 class='film-title'>${original_title}</h3>\n          <table class='table'>\n        <tbody>\n          <tr>\n            <td><p class='table-text__left'>Vote / Votes</p></td>\n            <td>\n              <p class='table-text__right'>\n                <span class='average'>${average}</span>\n                <span class='awerage-dot'> /</span> ${vote_count}\n              </p>\n            </td>\n            </tr>\n          <tr>\n            <td><p class='table-text__left'>Popularity</p></td>\n            <td><p class='table-text__right'>${popularityCalc}</p></td>\n          </tr>\n            <tr>\n            <td><p class='table-text__left'>Original Title</p></td>\n            <td><p class='table-text__right '>${original_title}</p></td>\n          </tr>\n            <tr>\n            <td><p class='table-text__left'>Genre</p></td>\n            <td><p class='table-text__right '>${genreNames}</p></td>\n          </tr>\n        </tbody>\n        </table>\n          <p class='descr-text'>About</p>\n          <p class='descr-text-content '> ${overview}</p>\n        <ul class='btn-list'>\n          <li class='btn-list__item'>\n           <button class='btn-list__item-btn--add' type=\"button\">add to Watched</button>\n          </li>\n          <li class='btn-list__item'>\n            <button class='btn-list__item-btn--queie' type=\"button\">add to queue</button>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n  `;\n\n  return modalFilmCard.insertAdjacentHTML('afterbegin', renderFilm);\n}\nexport function renderModalFilm(data) {\n  getList.addEventListener('click', onclick);\n  cards = data;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateFieldInit;\nvar _checkPrivateRedeclaration = _interopRequireDefault(require(\"./_check_private_redeclaration\"));\nfunction _classPrivateFieldInit(obj, privateMap, value) {\n    (0, _checkPrivateRedeclaration).default(obj, privateMap);\n    privateMap.set(obj, value);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","export class ThemoviedbAPI {\n  #BASE_URL = 'https://api.themoviedb.org/3/';\n  #API_KEY = '?api_key=7a4cd4317772102a9b88ef6a54b71590';\n\n  constructor() {\n    this.page = 1;\n    this.BASE_URL = 'https://api.themoviedb.org/3/';\n    this.API_KEY = '?api_key=7a4cd4317772102a9b88ef6a54b71590';\n  }\n\n  async getMovies(page = this.page) {\n    const trending = 'trending';\n    const mediaType = 'movie';\n    const timeWindow = 'day';\n\n    try {\n      return await fetch(\n        `${this.BASE_URL}${trending}/${mediaType}/${timeWindow}${this.API_KEY}&page=${page}`\n      ).then(res => res.json());\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async getSearchMovie(keyword, page) {\n    try {\n      return await fetch(\n        `${this.BASE_URL}search/movie${this.API_KEY}&query=${keyword}&page=${page}`\n      ).then(res => res.json());\n    } catch (arr) {\n      console.log(err);\n    }\n  }\n\n  async getGanres() {\n    const genre = 'genre';\n    const option = 'movie';\n    const list = 'list';\n\n    try {\n      return await fetch(\n        `${this.BASE_URL}${genre}/${option}/${list}${this.API_KEY}`\n      ).then(res => res.json());\n    } catch (arr) {\n      console.log(err);\n    }\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n}\n","import { ThemoviedbAPI } from '../API/themoviedb-api';\n\nconst themoviedbAPI = new ThemoviedbAPI();\n\nexport function createCard(data) {\n  return data\n    .map(\n      ({ id, poster_path, release_date, title, vote_average, genre_name }) => {\n        const average = vote_average.toString().slice(0, 3);\n\n        let dateYear; //\\\\ доробити рік\n        dateYear = new Date(release_date).getFullYear();\n\n        let genreNames;\n        let verticalLine = `<span class=\"vertical-line\">|</span>`;\n        if (genre_name.length > 3) {\n          genreNames = genre_name.slice(0, 2).join(', ') + ', Other';\n        } else if (genre_name.length === 0) {\n          verticalLine = '';\n          genreNames = '';\n        } else {\n          genreNames = genre_name.join(', ');\n        }\n\n        return `\n          <li class=\"card_item grid-item\" id=${id}>\n            <div class=\"card__image\">\n              <img class=\"image\" src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${title}\" loading=\"lazy\" />\n            </div>\n\n            <h1 class=\"card__title\">${title}</h1>\n            <div class=\"card__info\">\n              <div class=\"card__genres\">\n                <span class=\"genre\">${genreNames}</span>\n              </div>\n              ${verticalLine}\n              <span class=\"card__year\">${dateYear}</span>\n              <span class='card__average on-library'>${average}</span>\n            </div>\n          </li>\n        `;\n      }\n    )\n    .join('');\n}\n","import { ThemoviedbAPI } from '../API/themoviedb-api';\n\nconst refs = {\n  container: document.querySelector('.pagination-container'),\n  leftArrow: document.querySelector('.left-arrow'),\n  rightArrow: document.querySelector('.rightArrow'),\n};\n\nconst themoviedbAPI = new ThemoviedbAPI();\n\nexport function renderPagination(page, totalPages) {\n  if (!page || !totalPages || totalPages === 1) {\n    return;\n  }\n  let markup = '';\n  const beforePrevPage = page - 2;\n  const prevPage = page - 1;\n  const nextPage = page + 1;\n  const afterNextPage = page + 2;\n\n  if (page > 1) {\n    markup += `<li class=\"button style_color\">&loarr;</li>`;\n  }\n\n  if (page > 2) {\n    markup += `<li class=\"button style_enpty\">1</li>`;\n  }\n\n  if (page > 4) {\n    markup += `<li class=\"button\">&middot&middot&middot</li>`;\n  }\n\n  if (page > 3) {\n    markup += `<li class=\"button style_enpty\">${beforePrevPage}</li>`;\n  }\n\n  if (page > 1) {\n    markup += `<li class=\"button style_enpty\">${prevPage}</li>`;\n  }\n\n  markup += `<li class = 'pagination-active'>${page}</li>`;\n\n  if (page + 1 < totalPages) {\n    markup += `<li class=\"button style_enpty\">${nextPage}</li>`;\n  }\n\n  if (page + 2 < totalPages) {\n    markup += `<li class=\"button style_enpty\">${afterNextPage}</li>`;\n  }\n\n  if (totalPages > page + 3) {\n    markup += `<li class=\"button\">&middot&middot&middot</li>`;\n  }\n\n  if (totalPages > page) {\n    markup += `<li class=\"button style_enpty\">${totalPages}</li>`;\n  }\n\n  if (totalPages > page) {\n    markup += '<li class=\"button style_color\">&roarr;</li>';\n  }\n  refs.container.innerHTML = markup;\n}\n","import { ThemoviedbAPI } from '../API/themoviedb-api';\n\nconst themoviedbAPI = new ThemoviedbAPI();\n\nthemoviedbAPI.getGanres().then(setGenreArr);\n\nlet genresArr;\n\nfunction setGenreArr(data) {\n  genresArr = data.genres;\n}\n\nexport function serchGenre(curentArr) {\n  let curentGenres = [];\n\n  curentArr.forEach(element => {\n    let obj = genresArr.find(el => el.id === element);\n    curentGenres.push(obj);\n  });\n\n  const genrsNames = curentGenres.map(el => el.name);\n\n  return genrsNames;\n}\n","import { ThemoviedbAPI } from '../API/themoviedb-api';\nimport { createCard } from './createCard';\nimport { renderModalFilm } from '../templates/renderModalFilm';\nimport { renderPagination } from '../pagination/pagination';\nimport { serchGenre } from './decodeGanre';\n\nconst gallery = document.querySelector('.gallery');\nconst container = document.querySelector('.pagination-container');\nconst themoviedbAPI = new ThemoviedbAPI();\n\nlet currentPage = 1;\nexport function getApiList() {\n  themoviedbAPI.getMovies().then(data => {\n    const arr = handleSuccess(data);\n    renderModalFilm(arr);\n  });\n}\n\nexport function handleSuccess(data) {\n  data.results.forEach(element => {\n    const genreName = serchGenre(element.genre_ids);\n    const newObj = recordingGenre(element, genreName);\n  });\n\n  let newData = data.results;\n  gallery.insertAdjacentHTML('beforeend', createCard(data.results));\n  gallery.innerHTML = createCard(data.results);\n  renderPagination(data.page, data.total_pages);\n  container.addEventListener('click', handlePagination);\n  return newData;\n}\n\nfunction handlePagination(event) {\n  if (event.target.tagName !== 'LI' || event.target.textContent === '...') {\n    return;\n  }\n  const page = event.target.textContent;\n  if (page === '⇽') {\n    currentPage = Number(currentPage) - 1;\n  } else if (page === '⇾') {\n    currentPage = Number(currentPage) + 1;\n  } else {\n    currentPage = page;\n  }\n  themoviedbAPI.getMovies(currentPage).then(data => {\n    const arr = handleSuccess(data);\n    renderModalFilm(arr);\n  });\n}\n\nfunction recordingGenre(obj, arr) {\n  const newObj = obj;\n  newObj.genre_name = arr;\n\n  return newObj;\n}\n\ngetApiList();\n","const refs = {\n  openModalBtn: document.querySelector('.open-btn'),\n  closeModalBtn: document.querySelector('.close-btn'),\n  modal: document.querySelector('.modal'),\n};\n\nrefs.openModalBtn.addEventListener('click', toggleModal);\n\nfunction toggleModal(event) {\n  event.preventDefault();\n  refs.modal.classList.toggle('is-hidden');\n  refs.closeModalBtn.addEventListener('click', toggleModal);\n  if (document.body.style.overflow === 'hidden') {\n    document.body.style.overflow = 'auto';\n  } else {\n    document.body.style.overflow = 'hidden';\n  }\n}\nexport default function callModal() {\n  document.addEventListener('keydown', event => {\n    if (event.key === 'Escape') {\n      return toggleModal(event);\n    }\n  });\n}\n","import { ThemoviedbAPI } from './themoviedb-api';\nimport { createCard } from '../componentsJs/createCard';\nimport { renderPagination } from '../pagination/pagination';\nimport { handleSuccess } from '../componentsJs/generateCardList';\nimport { renderModalFilm } from '../templates/renderModalFilm';\n\nconst themoviedbAPI = new ThemoviedbAPI();\nconst searchInput = document.querySelector('.search-input');\nconst gallery = document.querySelector('.gallery');\nconst errorText = document.querySelector('.error');\nconst container = document.querySelector('.pagination-container');\n\nlet currentPage = 1;\n\nconst searchForm = document.querySelector('.search-form');\nsearchForm.addEventListener('submit', search);\n\nexport function search(event) {\n  event.preventDefault();\n  errorText.innerHTML = '';\n  themoviedbAPI.getSearchMovie(searchInput.value, currentPage).then(data => {\n    if (data.total_results === 0) {\n      processSuccess(data);\n      return;\n    }\n    const arr = handleSuccess(data);\n    processSuccess(data);\n    renderModalFilm(arr);\n  });\n}\n\nfunction processSuccess(data) {\n  if (data.total_results === 0 || searchInput.value.trim() === '') {\n    container.innerHTML = '';\n    errorText.innerHTML = `Search result not successful. Enter the correct movie name and`;\n  } else {\n    renderPagination(data.page, data.total_pages);\n  }\n  container.addEventListener('click', handlePaginationForSearch);\n  return data.results;\n}\n\nfunction handlePaginationForSearch(event) {\n  if (event.target.tagName !== 'LI' || event.target.textContent === '...') {\n    return;\n  }\n  const page = event.target.textContent;\n  if (page === '⇽') {\n    currentPage = Number(currentPage) - 1;\n  } else if (page === '⇾') {\n    currentPage = Number(currentPage) + 1;\n  } else {\n    currentPage = page;\n  }\n  themoviedbAPI\n    .getSearchMovie(searchInput.value, currentPage)\n    .then(processSuccess);\n}\n"],"names":["$b7e02aaeb3f80b05$export$2e2bcd8739ae039","closeModalBtn","document","querySelector","modalFilmCard","backdropClose","addEventListener","evt","innerHTML","body","classList","remove","currentTarget","target","window","onEscape","code","removeEventListener","Object","defineProperty","module","exports","value","default","obj","privateCollection","has","TypeError","$f53c4050d74ee576$var$arrayWatched","$f53c4050d74ee576$var$arrayQueue","$f53c4050d74ee576$export$2e2bcd8739ae039","data","btnAddfilm","btnAddQueie","push","localStorage","setItem","JSON","stringify","$eb5d7b1695745393$var$modalFilmCard","$eb5d7b1695745393$var$getList","$eb5d7b1695745393$var$addLib","$eb5d7b1695745393$var$cards","$eb5d7b1695745393$var$onclick","closest","id","find","option","Number","original_title","popularity","vote_average","vote_count","overview","poster_path","title","genre_name","average","toString","slice","popularityCalc","Math","floor","genreNames","join","renderFilm","insertAdjacentHTML","$eb5d7b1695745393$var$renderFilms","add","$eb5d7b1695745393$export$73c309201c7743a4","$bb98491953509995$exports","privateMap","$bb98491953509995$var$_checkPrivateRedeclaration","set","parcelRequire","__esModule","$4798b1163b53507f$var$_BASE_URL","WeakMap","$4798b1163b53507f$var$_API_KEY","$4798b1163b53507f$export$f0fa273f55fa4fe9","async","page","this","fetch","BASE_URL","API_KEY","then","res","json","err","console","log","keyword","arr","resetPage","constructor","$parcel$interopDefault","$f57d1f9f8a4a695e$export$b7316deff43c35f7","map","release_date","dateYear","Date","getFullYear","verticalLine","length","$6077aa4079e9cd36$var$refs","container","leftArrow","rightArrow","$6077aa4079e9cd36$export$825408fbca4f2040","totalPages","markup","$e4ac023b5b82985a$var$genresArr","$e4ac023b5b82985a$export$816c344f8c28629","curentArr","curentGenres","forEach","element","el","name","getGanres","genres","$4f0b9b62dbd05c77$var$gallery","$4f0b9b62dbd05c77$var$container","$4f0b9b62dbd05c77$var$themoviedbAPI","$4f0b9b62dbd05c77$var$currentPage","$4f0b9b62dbd05c77$export$3134aad02465a5ae","results","newObj","$4f0b9b62dbd05c77$var$recordingGenre","genre_ids","newData","total_pages","$4f0b9b62dbd05c77$var$handlePagination","event","tagName","textContent","getMovies","$dff7f221eb395d99$var$refs","openModalBtn","modal","$dff7f221eb395d99$var$toggleModal","preventDefault","toggle","style","overflow","$4b58548a2d92c2fe$var$themoviedbAPI","$4b58548a2d92c2fe$var$searchInput","$4b58548a2d92c2fe$var$errorText","$4b58548a2d92c2fe$var$container","$4b58548a2d92c2fe$var$currentPage","$4b58548a2d92c2fe$var$processSuccess","total_results","trim","$4b58548a2d92c2fe$var$handlePaginationForSearch","getSearchMovie"],"version":3,"file":"index.48c9f710.js.map"}